<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAAAIAD6BAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEj0lEQVRIS5VWW1BT
        VxTNTGf86G+nP318Op1+tZ/9sT+ttZSAgE4LQh5AqrxRKbVFIZAEVECqUj/sqBWSANpSa1tRBAHJUAjm
        koRnpTSIdjoVEYbylpTVve+DJBCZ6ZrZE+6556x19tr7nItqKxiNbS9oTJ63tWZXntYs2Ciatea+Forr
        FFUakxCbVOF5WZ7+/6CzCHE6i7tdZ+mbM5T/hk8rRyl+l4P/HoW+zAu9xeMj4SqN0fG6vHRr6M29rxGx
        jRcbKu4j+Xg/6Jmib1PoSz1IOTlM80ahtfT5tCYhUaYJD43RuV1n8biV3YUjfV6kklAyrdGUuI7IdKHQ
        Wtyv0EQP27FxsRKJJQLijS6Q/2HfJ5f1U8YD0JjuHZZpAyDP7WxJuIUcTJxe6UXB+RHsK3YRiRB2Hgvo
        yzyLKWX978jUvHtXTMqJAehKw3sdX+RC/rkh3J+Yw+KyH/bmR0iibDjCzedGoMLfzT4zuk1sRRrsZN83
        TmQrPi68B9O39zE5s4xg3HJOcmEpm80iXHyuCXciWeN8iwYXpG4JTNIQ+Se08+rvfZidX5VpQ9EzNI20
        Ci8SyL7gtRxiFqXCJRXtMk/yPmBPEvnLO6u5+RCr/jWZDphbWMHjp/NYWwuMDY/P4dDZQXEzwQKcgdYi
        /EEZuO2sprxgW5LL3Pjl179lCgkLS8/w+almRGfVoc3pk0cl/DW1jKILI7SxgAC3OXWmX6Uzu5uDBbhw
        t3omxYUrK37xl7G4vIpjZ+8gLrcBDmFCHsV6NotLfnxW7RGtFbmoYVLLR0Ad1NcaLKAxCzj/ow/ffOdC
        p/BAXKxg1f8v/plfkZ8k+Gms9icvGpr6oT96HfHHOqnIdEhJgK2nGgg/BwtwcM9HZDehtTvUioXFZ5ie
        XQqpAeNIVQt2aC8i4oCVLGzAvkKHeB6STwyKAqc3CnDwqXV4n8gUwJOZBeSUNWHPwStobBmWRyUUVrdh
        1/5aqDPsiEy3ISqrHppiJ/G4Z1V85XKLcu8GC3AtuvqnZQpg9MEUIongXd0lHL/gkEclBAtIIlbEHSa7
        CtrvqhIqXS/pzK5H0sEIFegeDAiMPXyKWCrw+4YaVF7ukkclGM+1hwhwxB66BnWa7ah4VejMwlf7T42F
        CLBFra6ARX8+nhU7iAVOW7vlUQl55c0kYF0nj865Sr910+os+xuigMHofZWqPsFFUQQ01NP5Xw/ihsOH
        jl4fdckAYrLrxZ3mV95Ge+84nYdxVNudiMqsE+1b3/3Ba4g8YDWK5AqIMIFrwXd6cBZ7vnTgw7QGfGC4
        vE7wUZoNOykTjvdSa8TCKu9icn/g567EvNoXZeoAtCbXFynUXhyKiI6Kn1jcg905jWLxFCImDSYmSxBD
        O4/KqHNHZNZslyk3g+8mvcU9x4dE6Sw9HRpNSa+UelpARIno7KvYndsIdWZ9R4RhC3IFdDZ20KfzDtfE
        QNc4f3fZPvrvQmw/ifQK2dEo7lqdYZuiKNoZzpbnYdeZG9sok72UwUUSHKMrxc+f09STQ9ibf5OKaptR
        p9s7KAqis61vyss2QKX6D0lcW3VtlWB0AAAAAElFTkSuQmCC
</value>
  </data>
</root>